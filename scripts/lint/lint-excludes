./swim/disseminator.go:*: range var member copies Lock: swim.Member
./swim/member.go:*: address passes Lock by value: swim.Member
./swim/member.go:*: incarnation passes Lock by value: swim.Member
./swim/memberlist.go:*: Pingable passes Lock by value: swim.Member
./swim/member_test.go:*: newMember returns Lock by value: swim.Member
./swim/ping_request_sender.go:*: func passes Lock by value: swim.Member
./swim/stats_test.go:*: range var member copies Lock: swim.Member
./swim/test_utils.go:*: range var expected copies Lock: swim.Member
./swim/handlers.go:*: range var member copies Lock: swim.Member
# go 1.6 travis - "Lock" is now lowercase "lock":
./swim/disseminator.go:*: range var member copies lock: swim.Member
./swim/member.go:*: address passes lock by value: swim.Member
./swim/member.go:*: incarnation passes lock by value: swim.Member
./swim/member_test.go:*: newMember returns lock by value: swim.Member
./swim/member_test.go:*: assignment copies lock value to m: swim.Member
./swim/member_test.go:*: assignment copies lock value to m: swim.Member
./swim/memberlist.go:*: Pingable passes lock by value: swim.Member
./swim/ping_request_sender.go:*: func passes lock by value: swim.Member
./swim/stats.go:*: assignment copies lock value to (\*s)\[i\]: swim.Member
./swim/stats.go:*: assignment copies lock value to (\*s)\[j\]: swim.Member
./swim/stats_test.go:*: range var member copies lock: swim.Member
./swim/test_utils.go:*: range var expected copies lock: swim.Member
./swim/handlers.go:*: range var member copies lock: swim.Member
